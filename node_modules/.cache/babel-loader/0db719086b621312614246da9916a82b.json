{"ast":null,"code":"import { LOAD_CATEGORY, LOAD_CATEGORY_API, UPDATE_CATEGORY } from \"./types\";\nexport const initialState = {\n  categories: [],\n  categoriesApiData: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CATEGORY:\n      {\n        const categories = [...state.categories];\n        let category = categories.find(c => c.id === action.item.id);\n        if (!category) return state;\n        const index = categories.indexOf(category);\n        categories[index] = action.item;\n        return { ...state,\n          categories\n        };\n      }\n\n    case LOAD_CATEGORY:\n      {\n        return { ...state,\n          categories: [...action.items]\n        };\n      }\n\n    case LOAD_CATEGORY_API:\n      {\n        return { ...state,\n          categoriesApiData: [...action.items]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sachila/Projects/sample/gapstar/react/demo/src/store/reducer.ts"],"names":["LOAD_CATEGORY","LOAD_CATEGORY_API","UPDATE_CATEGORY","initialState","categories","categoriesApiData","reducer","state","action","type","category","find","c","id","item","index","indexOf","items"],"mappings":"AACA,SAEEA,aAFF,EAGEC,iBAHF,EAIEC,eAJF,QAKO,SALP;AAOA,OAAO,MAAMC,YAA0B,GAAG;AACxCC,EAAAA,UAAU,EAAE,EAD4B;AAExCC,EAAAA,iBAAiB,EAAE;AAFqB,CAAnC;;AAKP,MAAMC,OAAO,GAAG,CACdC,KAAmB,GAAGJ,YADR,EAEdK,MAFc,KAGG;AACjB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAL;AAAsB;AACpB,cAAME,UAAU,GAAG,CAAC,GAAGG,KAAK,CAACH,UAAV,CAAnB;AACA,YAAIM,QAAQ,GAAGN,UAAU,CAACO,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,IAAP,CAAYD,EAA5C,CAAf;AACA,YAAI,CAACH,QAAL,EAAe,OAAOH,KAAP;AAEf,cAAMQ,KAAK,GAAGX,UAAU,CAACY,OAAX,CAAmBN,QAAnB,CAAd;AACAN,QAAAA,UAAU,CAACW,KAAD,CAAV,GAAoBP,MAAM,CAACM,IAA3B;AACA,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA;AAFK,SAAP;AAID;;AAED,SAAKJ,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGO,KADE;AAELH,UAAAA,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACS,KAAX;AAFP,SAAP;AAID;;AAED,SAAKhB,iBAAL;AAAwB;AACtB,eAAO,EACL,GAAGM,KADE;AAELF,UAAAA,iBAAiB,EAAE,CAAC,GAAGG,MAAM,CAACS,KAAX;AAFd,SAAP;AAID;;AAED;AACE,aAAOV,KAAP;AA7BJ;AA+BD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import { InitialState } from \"./initialState\";\nimport {\n  AppActions,\n  LOAD_CATEGORY,\n  LOAD_CATEGORY_API,\n  UPDATE_CATEGORY,\n} from \"./types\";\n\nexport const initialState: InitialState = {\n  categories: [],\n  categoriesApiData: [],\n};\n\nconst reducer = (\n  state: InitialState = initialState,\n  action: AppActions\n): InitialState => {\n  switch (action.type) {\n    case UPDATE_CATEGORY: {\n      const categories = [...state.categories];\n      let category = categories.find((c) => c.id === action.item.id);\n      if (!category) return state;\n\n      const index = categories.indexOf(category);\n      categories[index] = action.item;\n      return {\n        ...state,\n        categories,\n      };\n    }\n\n    case LOAD_CATEGORY: {\n      return {\n        ...state,\n        categories: [...action.items],\n      };\n    }\n\n    case LOAD_CATEGORY_API: {\n      return {\n        ...state,\n        categoriesApiData: [...action.items],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}