{"ast":null,"code":"var _jsxFileName = \"/home/sachila/Projects/sample/gapstar/react/demo/src/components/Category/CategoryCheckboxFacets.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateCategory } from \"../../store/actions\";\nimport { ChildCategoryWrapper, ChildContainer, FormControlLabelContainer, IconButtonContainer } from \"../../styles/elements\";\nimport { handleDeleteAll, handleSelectAll } from \"../../services/CategoryService\";\nimport { CategoryChildCheckboxFacets } from \"./CategoryChildCheckboxFacets\";\nimport { Checkbox, FormGroup } from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CategoryCheckboxFacets = props => {\n  _s();\n\n  const {\n    childCategories\n  } = props;\n  const dispatch = useDispatch();\n\n  const handleCheckboxChange = async (event, category) => {\n    if (category.deleted) return;\n    const checked = event.target.checked;\n    category.enabled = checked;\n    await dispatch(updateCategory(category));\n    handleSelectAll(event, async category => {\n      await dispatch(updateCategory(category));\n    }, category.childCategories);\n  };\n\n  const handleClickDelete = async category => {\n    category.deleted = true;\n    category.enabled = false;\n    await dispatch(updateCategory(category));\n    handleDeleteAll(category.deleted, category.enabled, async category => {\n      await dispatch(updateCategory(category));\n    }, category.childCategories);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChildContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: childCategories.map(category => /*#__PURE__*/_jsxDEV(ChildCategoryWrapper, {\n        children: !category.deleted && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabelContainer, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              id: category.id,\n              checked: category.enabled,\n              value: category.enabled,\n              onChange: e => handleCheckboxChange(e, category),\n              color: \"default\"\n            }, `${category.id} - ${category.name}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this),\n            label: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButtonContainer, {\n            \"aria-label\": \"delete\",\n            onClick: e => handleClickDelete(category),\n            children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CategoryChildCheckboxFacets, {\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true)\n      }, `${category.id} - ${category.name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryCheckboxFacets, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CategoryCheckboxFacets;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryCheckboxFacets\");","map":{"version":3,"sources":["/home/sachila/Projects/sample/gapstar/react/demo/src/components/Category/CategoryCheckboxFacets.tsx"],"names":["React","useDispatch","updateCategory","ChildCategoryWrapper","ChildContainer","FormControlLabelContainer","IconButtonContainer","handleDeleteAll","handleSelectAll","CategoryChildCheckboxFacets","Checkbox","FormGroup","ClearIcon","CategoryCheckboxFacets","props","childCategories","dispatch","handleCheckboxChange","event","category","deleted","checked","target","enabled","handleClickDelete","map","id","e","name"],"mappings":"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","sourcesContent":["import { CategoryStructure } from \"../../models/CategoryStructure\";\nimport React, { ChangeEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateCategory } from \"../../store/actions\";\nimport {\n  ChildCategoryWrapper,\n  ChildContainer,\n  FormControlLabelContainer,\n  IconButtonContainer,\n} from \"../../styles/elements\";\nimport {\n  handleDeleteAll,\n  handleSelectAll,\n} from \"../../services/CategoryService\";\nimport { CategoryChildCheckboxFacets } from \"./CategoryChildCheckboxFacets\";\nimport { Checkbox, FormGroup } from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\ninterface Props {\n  childCategories: CategoryStructure[];\n}\n\nexport const CategoryCheckboxFacets: React.FC<Props> = (props) => {\n  const { childCategories } = props;\n  const dispatch = useDispatch();\n\n  const handleCheckboxChange = async (\n    event: ChangeEvent<HTMLInputElement>,\n    category: CategoryStructure\n  ) => {\n    if (category.deleted) return;\n    const checked = event.target.checked;\n    category.enabled = checked;\n\n    await dispatch(updateCategory(category));\n\n    handleSelectAll(\n      event,\n      async (category) => {\n        await dispatch(updateCategory(category));\n      },\n      category.childCategories\n    );\n  };\n\n  const handleClickDelete = async (category: CategoryStructure) => {\n    category.deleted = true;\n    category.enabled = false;\n\n    await dispatch(updateCategory(category));\n\n    handleDeleteAll(\n      category.deleted,\n      category.enabled,\n      async (category) => {\n        await dispatch(updateCategory(category));\n      },\n      category.childCategories\n    );\n  };\n\n  return (\n    <ChildContainer>\n      <FormGroup>\n        {childCategories.map((category) => (\n          <ChildCategoryWrapper key={`${category.id} - ${category.name}`}>\n            {!category.deleted && (\n              <>\n                <FormControlLabelContainer\n                  control={\n                    <Checkbox\n                      key={`${category.id} - ${category.name}`}\n                      id={category.id}\n                      checked={category.enabled}\n                      value={category.enabled}\n                      onChange={(e) => handleCheckboxChange(e, category)}\n                      color=\"default\"\n                    />\n                  }\n                  label={category.name}\n                />\n                <IconButtonContainer\n                  aria-label=\"delete\"\n                  onClick={(e) => handleClickDelete(category)}\n                >\n                  <ClearIcon />\n                </IconButtonContainer>\n                <CategoryChildCheckboxFacets category={category} />{\" \"}\n              </>\n            )}\n          </ChildCategoryWrapper>\n        ))}\n      </FormGroup>\n    </ChildContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}